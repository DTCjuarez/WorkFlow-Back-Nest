# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type RepuestoType {
  id: String!
  cantidadReserva: Float
  marca: String
  producto: String
  cantidad: Float!
  precio: Float
}

type CarInfo {
  id: String!
  placa: String!
  fechaSoat: DateTime!
  vigenciaContrato: DateTime!
  cliente: String!
  propietario: String!
  kmActual: Float!
  Puntaje: Float!
  Mantenimientos: [MantenimientoInfo!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MantenimientoInfo {
  id: String!
  fecha: DateTime!
  tipo: String!
  repuestosUsados: Float!
}

type MantenimientoInfoDto {
  placa: String!
  tipo: String
  tecnico: String
  estado: String
  kmPrevio: Float
  kmMedido: Float
  cliente: String
  fecha: DateTime
  fechaInicio: DateTime
  fechaFin: DateTime
  fechaSoat: DateTime
  anotaciones: String
  diagnostico: String
  diagnosticoFinal: String
  repuestos: [RepuestoType!]
  respuestosAjuste: [RepuestoType!]
  documentos: [String!]
}

type MantenimientoResult {
  cantidad: Int!
  mantenimientos: [MantenimientoInfoDto!]!
}

type Query {
  """Esta funcion retorna la informacion de un mantenimiento por id"""
  mantenimiento(id: String!): MantenimientoInfoDto!

  """
  Esta Funci贸n retorna la informaci贸n de un auto ademas de sus mantenimientos (id, fecha, tipo, repuestosUsados) por medio de su placa
  """
  findInfoForPlaca(placa: String!): CarInfo!

  """
  Esta funcion retorna la cantidad de mantenimientos por estado y los mantenimientos (informaci贸n compleja) por estado y fecha
  """
  mantenimientoChanges(estado: String!, fecha: DateTime!): MantenimientoResult!
  obtener_todos_los_repuestos: [RepuestoType!]!
}

type Mutation {
  createUser(username: CreateUserDto!): Boolean!
  updatePassword(username: String!, newPassword: String!): Boolean!

  """Esta funcion programa un mantenimiento"""
  programarMant(programarMantInput: PrograMantenimientoDto!): Boolean!

  """
  Esta funcion registra un mantenimiento que no haya sido previamente programado, ademas en el apartado de repuestos, solo pide entregar una id y la cantidad
  """
  updateOneMantenimiento(updateOneMantenimientoInput: UpdateOneMantenimientoDto!): Boolean!

  """
  Esta Funci贸n registra un mantenimiento que ya haya sido previamente programado, ademas en el apartado de repuestos, pide entregar una id y la cantidad
  """
  registrarMant(registrarMantInput: UpdateMantenimientoDto!): Boolean!
  createCar(createCarInput: CreateCarDto!): Boolean!
  createRepuesto(createRepuestoInput: CreateRepuestoDto!): Boolean!
  verifyRepuesto(verifyRepuestoInput: VerifyRepuestoDto!): Boolean!
  createFactura(createFacturaInput: CreateFacturaDto!): String!
}

input CreateUserDto {
  name: String!
  username: String!
  email: String!
  password: String!
  clienteAsociado: String
  nivelUser: String!
}

input PrograMantenimientoDto {
  placa: String!
  tipo: String!
  tecnico: String!
  fecha: DateTime!
  anotaciones: String!
}

input UpdateOneMantenimientoDto {
  placa: String!
  tipo: String!
  tecnico: String!
  fecha: DateTime!
  kmMedido: Float!
  fechaInicio: DateTime!
  diagnostico: String!
  repuestos: [RepuestoDto!]
}

input RepuestoDto {
  id: String!
  cantidadReserva: Float
  marca: String
  producto: String
  cantidad: Float!
  precio: Float
}

input UpdateMantenimientoDto {
  _id: String!
  kmMedido: Float!
  fechaInicio: DateTime!
  fecha: DateTime!
  diagnostico: String!
  repuestos: [RepuestoDto!]
}

input CreateCarDto {
  placa: String!
  propietario: String!
  cliente: String!
  fechaSoat: DateTime!
  kmRegistroInicial: Int!
  fechaRevision: DateTime!
  vigenciaContrato: DateTime!
  puntaje: Int
}

input CreateRepuestoDto {
  cantidadReserva: Float!
  marca: String!
  producto: String!
  cantidad: Float!
  precio: Float!
}

input VerifyRepuestoDto {
  repuestos: [RepuestoDto!]
}

input CreateFacturaDto {
  numeroFactura: String
  monto: Float!
  igv: Float
  detraccion: Float
  tipo: String!
  notificacion: Boolean!
  fecha: DateTime!
  involucrado: String
  documentos: [String!]
}